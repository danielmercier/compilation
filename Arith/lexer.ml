# 1 "lexer.mll"
 

  open Lexing
  open Parser
  open Ast
  open Error

  (* Petite fonction utile pour la localisation des erreurs. *)
  let current_pos b =
    lexeme_start_p b,
    lexeme_end_p b


# 16 "lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\240\255\241\255\001\000\243\255\245\255\246\255\247\255\
    \248\255\013\000\000\000\253\255\030\000\255\255\250\255\254\255\
    \000\000\000\000\000\000\000\000\001\000\000\000\003\000\001\000\
    \252\255\000\000\000\000\002\000\005\000\001\000\251\255\242\255\
    \004\000\251\255\252\255\253\255\016\000\032\000\255\255\254\255\
    ";
  Lexing.lex_backtrk = 
   "\255\255\255\255\255\255\014\000\255\255\255\255\255\255\255\255\
    \255\255\006\000\014\000\255\255\011\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\004\000\004\000\255\255\255\255\
    ";
  Lexing.lex_default = 
   "\002\000\000\000\000\000\255\255\000\000\000\000\000\000\000\000\
    \000\000\255\255\255\255\000\000\255\255\000\000\000\000\000\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\000\000\000\000\
    \033\000\000\000\000\000\000\000\255\255\255\255\000\000\000\000\
    ";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\013\000\011\000\000\000\000\000\000\000\035\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \013\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \012\000\004\000\006\000\008\000\036\000\007\000\037\000\005\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\009\000\
    \009\000\009\000\039\000\003\000\031\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\014\000\
    \015\000\038\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\020\000\
    \000\000\000\000\000\000\000\000\000\000\025\000\030\000\000\000\
    \000\000\017\000\022\000\028\000\027\000\000\000\018\000\021\000\
    \010\000\023\000\016\000\029\000\019\000\024\000\000\000\026\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \001\000\000\000\000\000\000\000\034\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\255\255\255\255\255\255\032\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\032\000\000\000\032\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\036\000\000\000\003\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\009\000\009\000\012\000\
    \012\000\037\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\019\000\
    \255\255\255\255\255\255\255\255\255\255\021\000\029\000\255\255\
    \255\255\016\000\020\000\027\000\026\000\255\255\017\000\020\000\
    \000\000\022\000\010\000\028\000\018\000\023\000\255\255\025\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\032\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec token lexbuf =
    __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 20 "lexer.mll"
               ( token lexbuf )
# 136 "lexer.ml"

  | 1 ->
# 22 "lexer.mll"
         ( comment (current_pos lexbuf) lexbuf; token lexbuf )
# 141 "lexer.ml"

  | 2 ->
# 25 "lexer.mll"
      ( new_line lexbuf; token lexbuf )
# 146 "lexer.ml"

  | 3 ->
# 28 "lexer.mll"
      ( PRINT_INT )
# 151 "lexer.ml"

  | 4 ->
# 30 "lexer.mll"
      ( PRINT_NEWLINE )
# 156 "lexer.ml"

  | 5 ->
# 32 "lexer.mll"
      ( CONST_UNIT )
# 161 "lexer.ml"

  | 6 ->
# 33 "lexer.mll"
           ( CONST_INT ( int_of_string (lexeme lexbuf) ) )
# 166 "lexer.ml"

  | 7 ->
# 34 "lexer.mll"
        ( PLUS )
# 171 "lexer.ml"

  | 8 ->
# 35 "lexer.mll"
        ( MINUS )
# 176 "lexer.ml"

  | 9 ->
# 36 "lexer.mll"
        ( STAR )
# 181 "lexer.ml"

  | 10 ->
# 37 "lexer.mll"
        ( SLASH )
# 186 "lexer.ml"

  | 11 ->
# 38 "lexer.mll"
        ( LPAREN )
# 191 "lexer.ml"

  | 12 ->
# 39 "lexer.mll"
        ( RPAREN )
# 196 "lexer.ml"

  | 13 ->
# 40 "lexer.mll"
         ( EOI )
# 201 "lexer.ml"

  | 14 ->
# 43 "lexer.mll"
      ( error (Lexical_error (lexeme lexbuf)) (current_pos lexbuf) )
# 206 "lexer.ml"

  | 15 ->
# 46 "lexer.mll"
      ( EOF )
# 211 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_token_rec lexbuf __ocaml_lex_state

and comment pos lexbuf =
    __ocaml_lex_comment_rec pos lexbuf 32
and __ocaml_lex_comment_rec pos lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 49 "lexer.mll"
         ( )
# 223 "lexer.ml"

  | 1 ->
# 50 "lexer.mll"
         ( comment pos lexbuf; comment pos lexbuf )
# 228 "lexer.ml"

  | 2 ->
# 51 "lexer.mll"
         ( new_line lexbuf )
# 233 "lexer.ml"

  | 3 ->
# 52 "lexer.mll"
        ( error (Lexical_error "comment opened but not closed") pos )
# 238 "lexer.ml"

  | 4 ->
# 53 "lexer.mll"
      ( comment pos lexbuf )
# 243 "lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; 
      __ocaml_lex_comment_rec pos lexbuf __ocaml_lex_state

;;

